require("dotenv").config();
const nodemailer = require("nodemailer");

const sendEmailAppointment = async (data) => {
    try {
        const transporter = nodemailer.createTransport({
            host: "smtp.gmail.com",
            port: 587,
            secure: false, // Use `true` for port 465, `false` for all other ports
            auth: {
                user: process.env.EMAIL_APP,
                pass: process.env.EMAIL_APP_PASSWORD,
            },
        });
        let message = {
            from: '"HealthBooking üëª" <tranducquynh00000@gmail.com>',
            to: data.Patient.email,
            subject: "Th√¥ng tin ƒë·∫∑t l·ªãch kh√°m b·ªánh",
            html: `
            <h3>Xin ch√†o ${data.Patient.fullName}</h3>
            <p>B·∫°n nh·∫≠n ƒë∆∞·ª£c email n√†y v√¨ ƒë√£ ƒë·∫∑t l·ªãch kh√°m b·ªánh online tr√™n HealthBooking.</p>
            <p>Th√¥ng tin ƒë·∫∑t l·ªãch kh√°m b·ªánh:</p>
            <div><b>Khoa: ${data.MedicalRecord.specialtyMR}</b></div>
            <div><b>S·ªë th·ª© t·ª± kh√°m: ${data.appointmentNumber}, Th·ªùi gian: ${data.time}, ${data.date}</b></div>
            <p>Th√¥ng tin b√°c sƒ©:</p>
            <div><b>B√°c sƒ©: ${data.MedicalStaff.fullName}, S·ªë ƒëi·ªán tho·∫°i: ${data.MedicalStaff.phone}, Gi√° kh√°m: ${data.MedicalStaff.price} ƒë</b></div>
            <div><b>ƒê·ªãa ch·ªâ ph√≤ng kh√°m: 97 Man Thi·ªán, ph∆∞·ªùng Hi·ªáp Ph√∫, TP Th·ªß ƒê·ª©c</b></div>
            <p>Vui l√≤ng b·ªánh nh√¢n ƒë·∫øn kh√°m ƒë√∫ng gi·ªù, Xin ch√¢n th√†nh c·∫£m ∆°n!</p>
            `,
        };
        const info = await transporter.sendMail(message);
        return info;
    } catch (err) {
        console.log(err);
        return {
            EC: -1,
            EM: "Something wrongs in service...",
            DT: "",
        };
    }
};
const sendEmailInvoice = async (data) => {
    try {
        const transporter = nodemailer.createTransport({
            host: "smtp.gmail.com",
            port: 587,
            secure: false, // Use `true` for port 465, `false` for all other ports
            auth: {
                user: process.env.EMAIL_APP,
                pass: process.env.EMAIL_APP_PASSWORD,
            },
        });
        let message = {
            from: '"HealthBooking üëª" <tranducquynh00000@gmail.com>',
            to: data.email,
            subject: "K·∫øt qu·∫£ kh√°m b·ªánh",
            html: `
            <h3>Xin ch√†o ${data.patientName}</h3>
            <p>B·∫°n nh·∫≠n ƒë∆∞·ª£c email n√†y v√¨ ƒë√£ kh√°m b·ªánh t·∫°i HealthBooking.</p>
            <p>Th√¥ng tin ƒë∆°n thu·ªëc/h√≥a ƒë∆°n ƒë∆∞·ª£c g·ª≠i trong file ƒë√≠nh k√®m.</p>
            <p>Xin ch√¢n th√†nh c·∫£m ∆°n!</p>
            `,
            attachments: [
                {
                    path: data.file,
                },
            ],
            // attachments: [
            //     {
            //         // binary buffer as an attachment
            //         filename: "text2.txt",
            //         content: new Buffer(data.file, "utf-8"),
            //     },
            // ],
        };
        const info = await transporter.sendMail(message);
        return info;
    } catch (err) {
        console.log(err);
        return {
            EC: -1,
            EM: "Something wrongs in service...",
            DT: "",
        };
    }
};
module.exports = {
    sendEmailAppointment,
    sendEmailInvoice,
};
